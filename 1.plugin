#!name=打断请求
#!desc=支持定时/WiFi 断开时执行.点击面板按钮或请求 kill-active-requests.com 手动打断请求. 请求支持通过 URL 参数传入正则匹配参数 REQ_RULE
#!icon=https://github.com/Toperlock/Quantumult/raw/main/icon/Doraemon/Doraemon-1068.png
#!arguments=PANEL_NAME:面板手动打断连接,CRON_SCRIPT_NAME:# 定时打断连接,CRON_EXP:*/1 * * * *,CRON_RULE:RULE-SET Telegram,CRON_NOTIFY:1,CRON_WAKE_SYSTEM:0,EVENT_SCRIPT_NAME:网络变化时打断连接,EVENT_NOTIFY:1,REQ_NOTIFY:1,TIMEOUT:10,ENGINE:auto,DISMISS:2,ICON:xmark.circle,ICON-COLOR:#C5424A,REQ_SCRIPT_NAME:通过请求手动打断连接
#!arguments-desc=1 为开启, 0 为关闭\n\nPANEL_NAME:\n面板名称\n若要禁用面板, 请输入 #\n\nCRON_SCRIPT_NAME:\n定时打断请求的脚本名称\n若要禁用定时打断连接这个功能, 请输入 #\n默认禁用\n\nCRON_EXP:\n定时打断请求的 cron 表达式\n\nCRON_RULE:\n定时打断请求的正则表达式\n用来匹配请求的 rule\n\nCRON_NOTIFY:\n定时打断请求打断连接时, 是否发送通知\n\nCRON_WAKE_SYSTEM:\n定时打断请求的 wake-system\n\nEVENT_SCRIPT_NAME:\n网络变化时打断连接的脚本名称\n若要禁用网络变化时打断连接这个功能, 请输入 #\n\nEVENT_NOTIFY:\n网络变化打断连接时, 是否发送通知\n\nREQ_NOTIFY:\n通过请求打断连接时, 是否发送通知\n\nTIMEOUT:\n超时, 默认为 10 秒, 为了让脚本内部超时比 Surge 脚本超时更快返回, 脚本内部会自动减 1 秒\n\nENGINE:\n默认为自动使用 webview 引擎, 可设为指定 jsc\n\nDISMISS:\n在设定的秒数后, 自动消除通知\n\nREQ_SCRIPT_NAME:\n通过请求手动打断连接的脚本名称\n若要禁用通过请求手动打断连接这个功能, 请输入 #

[Script]
# Cron
cron "*/1 * * * *" script-path=https://raw.githubusercontent.com/xream/scripts/main/surge/modules/kill-active-requests/index.js, timeout=120, tag=# 定时打断连接, argument="DISMISS=2&TIMEOUT=10&CRON_NOTIFY=1&CRON_RULE=RULE-SET Telegram&TYPE=CRON"

# Request
http-request ^https?:\/\/kill-active-requests\.com script-path=https://raw.githubusercontent.com/xream/scripts/main/surge/modules/kill-active-requests/index.js, timeout=10, tag=通过请求手动打断连接, argument="DISMISS=2&TIMEOUT=10&REQ_NOTIFY=1"

# Event
network-changed script-path=https://raw.githubusercontent.com/xream/scripts/main/surge/modules/kill-active-requests/index.js, timeout=30, tag=网络变化时打断连接, argument="DISMISS=2&TIMEOUT=10&EVENT_NOTIFY=1"

[MITM]
hostname = kill-active-requests.com